# 1Panel专用Docker Compose配置
# 适配1Panel的容器管理和网络配置

version: '3.8'

services:
  # MySQL数据库
  shortlink-mysql:
    image: mysql:8.0
    container_name: shortlink-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-shortlink123456}
      MYSQL_DATABASE: shortlink
      MYSQL_USER: shortlink
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-shortlink123456}
      TZ: Asia/Shanghai
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - shortlink_mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - 1panel-network

  # Redis缓存
  shortlink-redis:
    image: redis:7-alpine
    container_name: shortlink-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - shortlink_redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-shortlink123456}
    networks:
      - 1panel-network

  # Python后端API
  shortlink-backend:
    image: shortlink-backend:latest
    container_name: shortlink-backend
    restart: unless-stopped
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=mysql+pymysql://shortlink:${MYSQL_PASSWORD:-shortlink123456}@shortlink-mysql:3306/shortlink
      - DB_HOST=shortlink-mysql
      - DB_PORT=3306
      - DB_NAME=shortlink
      - DB_USER=shortlink
      - DB_PASSWORD=${MYSQL_PASSWORD:-shortlink123456}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-shortlink123456}@shortlink-redis:6379/0
      - HOST=0.0.0.0
      - PORT=9848
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY:-your-production-secret-key-change-this}
      - DEFAULT_DOMAIN=${DEFAULT_DOMAIN:-localhost:8848}
      - CORS_ORIGINS=["http://${DEFAULT_DOMAIN:-localhost:8848}", "https://${DEFAULT_DOMAIN:-localhost:8848}"]
      - ACCESS_TOKEN_EXPIRE_MINUTES=10080
    ports:
      - "${BACKEND_PORT:-9848}:9848"
    volumes:
      - shortlink_backend_logs:/app/logs
      - shortlink_backend_uploads:/app/uploads
    depends_on:
      - shortlink-mysql
      - shortlink-redis
    networks:
      - 1panel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9848/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Node.js前端
  shortlink-frontend:
    image: shortlink-frontend:latest
    container_name: shortlink-frontend
    restart: unless-stopped
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://${DEFAULT_DOMAIN:-localhost}:${BACKEND_PORT:-9848}
        - VITE_DEFAULT_DOMAIN=${DEFAULT_DOMAIN:-localhost:8848}
    environment:
      - NODE_ENV=production
    ports:
      - "${FRONTEND_PORT:-8848}:8848"
    depends_on:
      - shortlink-backend
    networks:
      - 1panel-network

volumes:
  shortlink_mysql_data:
    driver: local
  shortlink_redis_data:
    driver: local
  shortlink_backend_logs:
    driver: local
  shortlink_backend_uploads:
    driver: local

networks:
  1panel-network:
    external: true
